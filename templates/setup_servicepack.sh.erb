#!/bin/bash
set -e

# Link servicepacks roles to chef role directory.
refresh_role_link(){
  for role in "<%= SERVICEPACKS_DIR %>/<%= name %>/vendor/chef/roles/*"; do
    ln -sf $role <%= CHAOS_CHEF_ROLES_DIR %>
  done
}

# Register roles name into server chef roles directory.
#
# Registered roles will be used to generate a 'node.json' file at chef runtime.
register_role(){
  rm -f <%= CHAOS_SERVER_CHEF_ROLES_DIR %>/<%= name %>
  for role in <%= SERVICEPACKS_DIR %>/<%= name %>/vendor/chef/roles/*; do
    if [ -f "$role" ]; then
      echo $(basename ${role%.json*}) >> <%= CHAOS_SERVER_CHEF_ROLES_DIR %>/<%= name %>
    fi
  done
}

# Create an empty env file
create_env_file(){
  touch <%= SERVICEPACKS_DIR %>/<%= name %>/env
  chown <%= SERVICEPACKS_USER %>:<%= SERVICEPACKS_USER %> <%= SERVICEPACKS_DIR %>/<%= name %>/env
}

# Create the tmp directory
create_tmp_dir(){
  mkdir <%= SERVICEPACKS_DIR %>/<%= name %>/tmp
  chown <%= SERVICEPACKS_USER %>:<%= SERVICEPACKS_USER %> <%= SERVICEPACKS_DIR %>/<%= name %>/tmp
}

# Clone or refresh the buildpack directory and link its roles into the chaos chef repo role folder.
if ls <%= SERVICEPACKS_DIR %>/<%= name %> &> /dev/null; then
  cd <%= SERVICEPACKS_DIR %>/<%= name %>
  git pull origin master &> /dev/null
  refresh_role_link
  register_role
  echo "updated"
else
  git clone <%= git_url %> <%= SERVICEPACKS_DIR %>/<%= name %>  &> /dev/null
  create_env_file
  create_tmp_dir
  refresh_role_link
  register_role
  echo "done"
fi